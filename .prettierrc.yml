# Learn more about Prettier's configurable options at:
# https://prettier.io/docs/en/options.html

# Find the Prettier formatter for Visual Studio Code at:
# https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode

# Specify the line length that the printer will wrap on.
printWidth: 80

# Specify the number of spaces per indentation-level.
tabWith: 2

# Indent lines with tabs instead of spaces.
useTabs: false

# Print semicolons at the ends of statements.
semi: true

# Use single quotes instead of double quotes.
singleQuote: false

# Change when properties in objects are quoted.
# "as-needed" - Only add quotes around object properties where required.
# "consistent" - If at least one property in an object requires quotes, quote all properties.
# "preserve" - Respect the input use of quotes in object properties.
quotePros: "as-needed"

# Use single quotes instead of double quotes in JSX.
jsxSingleQuote: false

# Print trailing commas wherever possible when multi-line. (A single-line array, for example, never gets trailing commas.)
# "none" - No trailing commas.
# "es5" - Trailing commas where valid in ES5 (objects, arrays, etc.)
# "all" - Trailing commas wherever possible (including function arguments). This requires node 8 or a transform.
trailingComma: "none"

# Print spaces between brackets in object literals.
# true - Example: { foo: bar }.
# false - Example: {foo: bar}.
bracketSpacing: true

# Put the > of a multi-line JSX element at the end of the last line instead of being alone on the next line (does not apply to self closing elements).
jsxBracketSameLine: false

# Include parentheses around a sole arrow function parameter.
# "avoid" - Omit parens when possible. Example: x => x
# "always" - Always include parens. Example: (x) => x
arrowParens: avoid

# End of line flavor.
# "auto" - Maintain existing line endings (mixed values within one file are normalised by looking at what's used after the first line)
# "lf" â€“ Line Feed only (\n), common on Linux and macOS as well as inside git repos
# "crlf" - Carriage Return + Line Feed characters (\r\n), common on Windows
# "cr" - Carriage Return character only (\r), used very rarely
endOfLine: lf
